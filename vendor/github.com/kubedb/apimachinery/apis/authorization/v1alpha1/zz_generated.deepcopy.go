// +build !ignore_autogenerated

/*
Copyright 2018 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/rbac/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthManagerRef) DeepCopyInto(out *AuthManagerRef) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		if *in == nil {
			*out = nil
		} else {
			*out = new(runtime.RawExtension)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthManagerRef.
func (in *AuthManagerRef) DeepCopy() *AuthManagerRef {
	if in == nil {
		return nil
	}
	out := new(AuthManagerRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LeaseData) DeepCopyInto(out *LeaseData) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LeaseData.
func (in *LeaseData) DeepCopy() *LeaseData {
	if in == nil {
		return nil
	}
	out := new(LeaseData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRole) DeepCopyInto(out *MongoDBRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRole.
func (in *MongoDBRole) DeepCopy() *MongoDBRole {
	if in == nil {
		return nil
	}
	out := new(MongoDBRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleBinding) DeepCopyInto(out *MongoDBRoleBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleBinding.
func (in *MongoDBRoleBinding) DeepCopy() *MongoDBRoleBinding {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBRoleBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleBindingCondition) DeepCopyInto(out *MongoDBRoleBindingCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleBindingCondition.
func (in *MongoDBRoleBindingCondition) DeepCopy() *MongoDBRoleBindingCondition {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleBindingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleBindingList) DeepCopyInto(out *MongoDBRoleBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDBRoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleBindingList.
func (in *MongoDBRoleBindingList) DeepCopy() *MongoDBRoleBindingList {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBRoleBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleBindingSpec) DeepCopyInto(out *MongoDBRoleBindingSpec) {
	*out = *in
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]v1.Subject, len(*in))
		copy(*out, *in)
	}
	out.Store = in.Store
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleBindingSpec.
func (in *MongoDBRoleBindingSpec) DeepCopy() *MongoDBRoleBindingSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleBindingStatus) DeepCopyInto(out *MongoDBRoleBindingStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	out.Lease = in.Lease
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]MongoDBRoleBindingCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleBindingStatus.
func (in *MongoDBRoleBindingStatus) DeepCopy() *MongoDBRoleBindingStatus {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleCondition) DeepCopyInto(out *MongoDBRoleCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleCondition.
func (in *MongoDBRoleCondition) DeepCopy() *MongoDBRoleCondition {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleList) DeepCopyInto(out *MongoDBRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDBRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleList.
func (in *MongoDBRoleList) DeepCopy() *MongoDBRoleList {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleSpec) DeepCopyInto(out *MongoDBRoleSpec) {
	*out = *in
	in.AuthManagerRef.DeepCopyInto(&out.AuthManagerRef)
	in.DatabaseRef.DeepCopyInto(&out.DatabaseRef)
	if in.CreationStatements != nil {
		in, out := &in.CreationStatements, &out.CreationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RevocationStatements != nil {
		in, out := &in.RevocationStatements, &out.RevocationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleSpec.
func (in *MongoDBRoleSpec) DeepCopy() *MongoDBRoleSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBRoleStatus) DeepCopyInto(out *MongoDBRoleStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]MongoDBRoleCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBRoleStatus.
func (in *MongoDBRoleStatus) DeepCopy() *MongoDBRoleStatus {
	if in == nil {
		return nil
	}
	out := new(MongoDBRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRole) DeepCopyInto(out *MySQLRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRole.
func (in *MySQLRole) DeepCopy() *MySQLRole {
	if in == nil {
		return nil
	}
	out := new(MySQLRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleBinding) DeepCopyInto(out *MySQLRoleBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleBinding.
func (in *MySQLRoleBinding) DeepCopy() *MySQLRoleBinding {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLRoleBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleBindingCondition) DeepCopyInto(out *MySQLRoleBindingCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleBindingCondition.
func (in *MySQLRoleBindingCondition) DeepCopy() *MySQLRoleBindingCondition {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleBindingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleBindingList) DeepCopyInto(out *MySQLRoleBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLRoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleBindingList.
func (in *MySQLRoleBindingList) DeepCopy() *MySQLRoleBindingList {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLRoleBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleBindingSpec) DeepCopyInto(out *MySQLRoleBindingSpec) {
	*out = *in
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]v1.Subject, len(*in))
		copy(*out, *in)
	}
	out.Store = in.Store
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleBindingSpec.
func (in *MySQLRoleBindingSpec) DeepCopy() *MySQLRoleBindingSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleBindingStatus) DeepCopyInto(out *MySQLRoleBindingStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	out.Lease = in.Lease
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]MySQLRoleBindingCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleBindingStatus.
func (in *MySQLRoleBindingStatus) DeepCopy() *MySQLRoleBindingStatus {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleCondition) DeepCopyInto(out *MySQLRoleCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleCondition.
func (in *MySQLRoleCondition) DeepCopy() *MySQLRoleCondition {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleList) DeepCopyInto(out *MySQLRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleList.
func (in *MySQLRoleList) DeepCopy() *MySQLRoleList {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleSpec) DeepCopyInto(out *MySQLRoleSpec) {
	*out = *in
	in.AuthManagerRef.DeepCopyInto(&out.AuthManagerRef)
	in.DatabaseRef.DeepCopyInto(&out.DatabaseRef)
	if in.CreationStatements != nil {
		in, out := &in.CreationStatements, &out.CreationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RevocationStatements != nil {
		in, out := &in.RevocationStatements, &out.RevocationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleSpec.
func (in *MySQLRoleSpec) DeepCopy() *MySQLRoleSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLRoleStatus) DeepCopyInto(out *MySQLRoleStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]MySQLRoleCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLRoleStatus.
func (in *MySQLRoleStatus) DeepCopy() *MySQLRoleStatus {
	if in == nil {
		return nil
	}
	out := new(MySQLRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRole) DeepCopyInto(out *PostgresRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRole.
func (in *PostgresRole) DeepCopy() *PostgresRole {
	if in == nil {
		return nil
	}
	out := new(PostgresRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleBinding) DeepCopyInto(out *PostgresRoleBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleBinding.
func (in *PostgresRoleBinding) DeepCopy() *PostgresRoleBinding {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRoleBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleBindingCondition) DeepCopyInto(out *PostgresRoleBindingCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleBindingCondition.
func (in *PostgresRoleBindingCondition) DeepCopy() *PostgresRoleBindingCondition {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleBindingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleBindingList) DeepCopyInto(out *PostgresRoleBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresRoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleBindingList.
func (in *PostgresRoleBindingList) DeepCopy() *PostgresRoleBindingList {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRoleBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleBindingSpec) DeepCopyInto(out *PostgresRoleBindingSpec) {
	*out = *in
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]v1.Subject, len(*in))
		copy(*out, *in)
	}
	out.Store = in.Store
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleBindingSpec.
func (in *PostgresRoleBindingSpec) DeepCopy() *PostgresRoleBindingSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleBindingStatus) DeepCopyInto(out *PostgresRoleBindingStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	out.Lease = in.Lease
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]PostgresRoleBindingCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleBindingStatus.
func (in *PostgresRoleBindingStatus) DeepCopy() *PostgresRoleBindingStatus {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleCondition) DeepCopyInto(out *PostgresRoleCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleCondition.
func (in *PostgresRoleCondition) DeepCopy() *PostgresRoleCondition {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleList) DeepCopyInto(out *PostgresRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleList.
func (in *PostgresRoleList) DeepCopy() *PostgresRoleList {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleSpec) DeepCopyInto(out *PostgresRoleSpec) {
	*out = *in
	in.AuthManagerRef.DeepCopyInto(&out.AuthManagerRef)
	in.DatabaseRef.DeepCopyInto(&out.DatabaseRef)
	if in.CreationStatements != nil {
		in, out := &in.CreationStatements, &out.CreationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RevocationStatements != nil {
		in, out := &in.RevocationStatements, &out.RevocationStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RollbackStatements != nil {
		in, out := &in.RollbackStatements, &out.RollbackStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RenewStatements != nil {
		in, out := &in.RenewStatements, &out.RenewStatements
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleSpec.
func (in *PostgresRoleSpec) DeepCopy() *PostgresRoleSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleStatus) DeepCopyInto(out *PostgresRoleStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]PostgresRoleCondition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleStatus.
func (in *PostgresRoleStatus) DeepCopy() *PostgresRoleStatus {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Store) DeepCopyInto(out *Store) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Store.
func (in *Store) DeepCopy() *Store {
	if in == nil {
		return nil
	}
	out := new(Store)
	in.DeepCopyInto(out)
	return out
}
