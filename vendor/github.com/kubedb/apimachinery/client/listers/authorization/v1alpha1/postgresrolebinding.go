/*
Copyright 2018 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubedb/apimachinery/apis/authorization/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PostgresRoleBindingLister helps list PostgresRoleBindings.
type PostgresRoleBindingLister interface {
	// List lists all PostgresRoleBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresRoleBinding, err error)
	// PostgresRoleBindings returns an object that can list and get PostgresRoleBindings.
	PostgresRoleBindings(namespace string) PostgresRoleBindingNamespaceLister
	PostgresRoleBindingListerExpansion
}

// postgresRoleBindingLister implements the PostgresRoleBindingLister interface.
type postgresRoleBindingLister struct {
	indexer cache.Indexer
}

// NewPostgresRoleBindingLister returns a new PostgresRoleBindingLister.
func NewPostgresRoleBindingLister(indexer cache.Indexer) PostgresRoleBindingLister {
	return &postgresRoleBindingLister{indexer: indexer}
}

// List lists all PostgresRoleBindings in the indexer.
func (s *postgresRoleBindingLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresRoleBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresRoleBinding))
	})
	return ret, err
}

// PostgresRoleBindings returns an object that can list and get PostgresRoleBindings.
func (s *postgresRoleBindingLister) PostgresRoleBindings(namespace string) PostgresRoleBindingNamespaceLister {
	return postgresRoleBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PostgresRoleBindingNamespaceLister helps list and get PostgresRoleBindings.
type PostgresRoleBindingNamespaceLister interface {
	// List lists all PostgresRoleBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresRoleBinding, err error)
	// Get retrieves the PostgresRoleBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PostgresRoleBinding, error)
	PostgresRoleBindingNamespaceListerExpansion
}

// postgresRoleBindingNamespaceLister implements the PostgresRoleBindingNamespaceLister
// interface.
type postgresRoleBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PostgresRoleBindings in the indexer for a given namespace.
func (s postgresRoleBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresRoleBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresRoleBinding))
	})
	return ret, err
}

// Get retrieves the PostgresRoleBinding from the indexer for a given namespace and name.
func (s postgresRoleBindingNamespaceLister) Get(name string) (*v1alpha1.PostgresRoleBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("postgresrolebinding"), name)
	}
	return obj.(*v1alpha1.PostgresRoleBinding), nil
}
